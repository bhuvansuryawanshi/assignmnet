name: Deploy python app to server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_USERNAME }}/python-app:latest
        platforms: linux/amd64 
        
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      SSH_PORT: ${{ vars.SSH_PORT }}
      SSH_HOST: ${{ vars.SSH_HOST }}
      DB_NAME: ${{ vars.DB_NAME }}
      DB_USER: ${{ vars.DB_USER }}
      DB_HOST: ${{ vars.DB_HOST }}

    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ env.SSH_PORT }}
        script: |

          # Cleaning up old containers using port 5000
          docker ps -q --filter "publish=5000" | xargs -r docker stop
          docker ps -aq --filter "publish=5000" | xargs -r docker rm

          # Stopping and removing old python-app container
          docker stop python-app || true
          docker rm python-app || true

          docker pull ${{ env.DOCKER_USERNAME }}/python-app:latest

          docker run -d -p 5000:5000 \
            --name python-app \
            -e DB_HOST=${{ env.DB_HOST }} \
            -e DB_NAME=${{ env.DB_NAME }} \
            -e DB_USER=${{ env.DB_USER }} \
            -e DB_PASS=${{ secrets.DB_PASS }} \
            ${{ env.DOCKER_USERNAME }}/python-app:latest
          
          sleep 5
          if docker ps | grep -q python-app; then
            echo "Container deployed successfully!"
            echo "http://${{ env.SSH_HOST }}:5000"
          else
            echo "Container failed to start"
            docker logs python-app
            exit 1
          fi
